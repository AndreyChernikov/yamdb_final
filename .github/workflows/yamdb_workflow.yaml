name: Yamdb app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort pytest
        pip install -r requirements.txt
#    - name: Test for PEP8 requirements
#      # Здесь логичнее разделить проверки по задачам
#      run: flake8
#    - name: Run pytest for project
#      run: |
#        echo SECRET_KEY="${{ secrets.SECRET_KEY }}" > .env
#        export PYTHONPATH=.
#        pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    # Касательно веток - абсолютно согласен. И, по логике, одного условия достаточно, ведь
    # остальные этапы выполняются в зависимости от успешности текущего
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: andyi95/yamdb_final:latest

  deploy:
    name: Deploy images on the destination server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      # Получим файлы текущей ветки и установим переменные Github Actions
      - uses: actions/checkout@v2

      - name: Create tar archive with Nginx and docker-compose files
        run: tar -cvf deploy.tar nginx/ scripts/ docker-compose.yaml
      - name: copy files with ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy.tar"
          target: "./"
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          # Вынесли запускаемый скрипт в отдельный файл
          script: |
            tar -xvf deploy.tar
            chmod +x scripts/deploy.sh
            ./scripts/deploy.sh

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} has passed successfully!
